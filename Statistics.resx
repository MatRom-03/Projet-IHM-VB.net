<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB4AAAEAIACgDwAAFgAAACgAAAAgAAAAPAAAAAEAIAAAAAAAAA8AAEAFAABABQAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAO4AAADuAAAA7wAAAP4AAAD+AAAA7wAAAO4AAADuAAAA7gAAAO4AAADvAAAA/gAA
        AP4AAADvAAAA7gAAAO4AAADuAAAA7gAAAO8AAAD+AAAA/gAAAO8AAADuAAAA7gAAAO4AAADuAAAA7wAA
        AP4AAAD+AAAA7wAAAO4AAADuAAAAEgAAAAwAAAAgAAAA8wAAAPMAAAAgAAAADAAAABEAAAARAAAADAAA
        ACAAAADzAAAA8wAAACAAAAAMAAAAEQAAABEAAAAMAAAAIAAAAPMAAADzAAAAIAAAAAwAAAARAAAAEQAA
        AAwAAAAgAAAA8wAAAPMAAAAgAAAADAAAABIAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAA
        AAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAIAAAAAAAAAEQAAAPIAAADyAAAAEQAA
        AAAAAAACAAAAAgAAAAAAAAARAAAA8gAAAPIAAAARAAAAAAAAAAIAAAACAAAAAAAAABEAAADyAAAA8gAA
        ABEAAAAAAAAAAgAAAAIAAAAAAAAAEQAAAPIAAADyAAAAEQAAAAAAAAACAAAAAQAAAAAAAAAQAAAA8gAA
        APIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAA
        APIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAA
        ABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAA
        AAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAEAAAAAAAAAEAAAAPIAAADyAAAAEQAAAAAAAAACAAAAAgAAAAAAAAARAAAA8gAAAPIAAAAQAAAAAAAA
        AAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAA
        AAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAA
        ABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAA
        APIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADxAAAA8gAAAB8AAAAMAAAAEQAAABEAAAAMAAAAIAAA
        APMAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAA
        ABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEgAAAO4AAAD/AAAA8gAAAPIAAADyAAAA8gAA
        APIAAADyAAAA/wAAAO4AAAARAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA3QAAAPIAAADxAAAA8gAA
        APIAAADyAAAA8gAAAPIAAAD/AAAA7gAAABEAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAA
        AAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAQAAAAEgAA
        ABAAAAAQAAAAEAAAABEAAAAMAAAAIAAAAPMAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAA
        APIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAA
        ABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAACAAAAAAAAABEAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAA
        AAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAA
        ABAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAA
        APIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAA
        APIAAADyAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        ABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAA
        AAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAA
        AAEAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAABAAAAAAAAABAAAADyAAAA8gAA
        ABEAAAAAAAAAAgAAAAIAAAAAAAAAEQAAAPIAAADyAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAA
        APIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAAAAAAAAABAAAAAQAA
        AAAAAAAQAAAA8gAAAPMAAAAgAAAADAAAABEAAAARAAAADAAAACAAAADyAAAA8QAAABAAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAA
        AAEAAAABAAAAAAAAABEAAADuAAAA/wAAAPIAAADyAAAA8gAAAPIAAADyAAAA8gAAAP8AAADuAAAAEgAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABAAAADyAAAA8gAA
        ABAAAAAAAAAAAQAAAAEAAAAAAAAAEQAAAO4AAAD/AAAA8gAAAPIAAADyAAAA8gAAAPIAAADxAAAA8gAA
        AN0AAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAA
        APIAAADyAAAAEAAAAAAAAAABAAAAAQAAAAAAAAAQAAAA8gAAAPMAAAAgAAAADAAAABEAAAAQAAAAEAAA
        ABAAAAASAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAQAAAA8gAAAPIAAAARAAAAAAAAAAIAAAACAAAAAAAAABEAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEQAA
        AAAAAAACAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADzAAAAIAAAAAwAAAARAAAAEQAAAAwAAAAgAAAA8wAA
        APIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAARAAAA7gAAAP8AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAAD/AAAA7gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABEAAADuAAAA/wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAAP8AAADuAAAAEQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJAAkJCQAJCQkACQkJAAkJC/0JCQkBC
        QkL/QkJC/0JCQv9CQkL/QkJC/0JCQv9CQkL/QkAC/0JAAv9CQAL/QkAC/0JC//9CQgL/QAL//0AC//9A
        Av8=
</value>
  </data>
</root>